
package GUI;

import LOGIC.Duenio;
import LOGIC.Validacion;
import SQL.Conexion;
import java.util.ArrayList;
import java.util.List;
import javax.swing.RowFilter;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author dylan
 */
public class GestionarDuenios extends javax.swing.JInternalFrame {

    Validacion val = null;
   private DefaultTableModel tabla;
    public GestionarDuenios() 
    {
        initComponents();
        tabla = new DefaultTableModel();
        cargarTabla();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tabla);
        TablaVet.setRowSorter(sorter);
        val = new Validacion();
        val.centrarInternalFrame(this, Principal.desktop_menu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        EditarDuenio = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Scroll = new javax.swing.JScrollPane();
        TablaVet = new javax.swing.JTable();
        btnDeshacer = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        AgregarMascota = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        bntAgregarDuenio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(131, 127, 212));
        jLabel3.setText("Busqueda:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 618, 906, -1));

        EditarDuenio.setBackground(new java.awt.Color(180, 128, 215));
        EditarDuenio.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        EditarDuenio.setForeground(new java.awt.Color(255, 255, 255));
        EditarDuenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DueñoYMacota.png"))); // NOI18N
        EditarDuenio.setText("Editar Dueño ");
        EditarDuenio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarDuenioActionPerformed(evt);
            }
        });
        getContentPane().add(EditarDuenio, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 510, 190, 40));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(131, 127, 212));
        jLabel2.setText("Dueños");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mascota_1.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 60));

        jPanel2.setLayout(new java.awt.BorderLayout());

        TablaVet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Scroll.setViewportView(TablaVet);

        jPanel2.add(Scroll, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 920, 400));

        btnDeshacer.setBackground(new java.awt.Color(255, 255, 255));
        btnDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/deshacer(1).png"))); // NOI18N
        btnDeshacer.setBorder(null);
        btnDeshacer.setBorderPainted(false);
        btnDeshacer.setFocusable(false);
        btnDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshacerActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeshacer, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, 20, 40));

        btnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/busqueda-de-lupa(1).png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.setBorderPainted(false);
        btnBuscar.setFocusable(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 20, 30, 40));
        getContentPane().add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, 200, -1));

        AgregarMascota.setBackground(new java.awt.Color(180, 128, 215));
        AgregarMascota.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        AgregarMascota.setForeground(new java.awt.Color(255, 255, 255));
        AgregarMascota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mascotas.png"))); // NOI18N
        AgregarMascota.setText("Agregar Mascota");
        AgregarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarMascotaActionPerformed(evt);
            }
        });
        getContentPane().add(AgregarMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 510, 190, 40));

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(220, 76, 68));
        jLabel5.setText("Busqueda:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, -1, -1));

        bntAgregarDuenio.setBackground(new java.awt.Color(180, 128, 215));
        bntAgregarDuenio.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        bntAgregarDuenio.setForeground(new java.awt.Color(255, 255, 255));
        bntAgregarDuenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DueñoMasco.png"))); // NOI18N
        bntAgregarDuenio.setText("Agregar Dueño");
        bntAgregarDuenio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAgregarDuenioActionPerformed(evt);
            }
        });
        getContentPane().add(bntAgregarDuenio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 190, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Light theme(11).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarMascotaActionPerformed
           val = new Validacion(); 
           AgregarMascotas AM = new AgregarMascotas();
           Principal.desktop_menu.add(AM);
           AM.setVisible(true);
           val.centrarInternalFrame(AM, Principal.desktop_menu);
    }//GEN-LAST:event_AgregarMascotaActionPerformed

    private void bntAgregarDuenioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAgregarDuenioActionPerformed
        AgregarDuenio AD = new AgregarDuenio();
        val = new Validacion();
        Principal.desktop_menu.add(AD);
         AD.setVisible(true);  
         val.centrarInternalFrame(AD, Principal.desktop_menu);

        // Agregar listener de eventos antes de mostrar la ventana
       AD.addInternalFrameListener(new InternalFrameAdapter() {
        @Override
        public void internalFrameClosed(InternalFrameEvent e) {
            cargarTabla();
            Principal.desktop_menu.setEnabled(true);
        }
    });

    }//GEN-LAST:event_bntAgregarDuenioActionPerformed

    private void EditarDuenioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarDuenioActionPerformed
          val = new Validacion();

        if (TablaVet.getRowCount() > 0) 
        {
            if (TablaVet.getSelectedRow() != -1) 
            {
                int id = Integer.parseInt(String.valueOf(TablaVet.getValueAt(TablaVet.getSelectedRow(), 0)));
                EditarDuenio ED = new EditarDuenio(id);
                Principal.desktop_menu.add(ED);
                ED.setVisible(true);
                ED.addInternalFrameListener(new InternalFrameAdapter()
                {
                    @Override
                    public void internalFrameClosed(InternalFrameEvent e) 
                    {
                        cargarTabla();
                        Principal.desktop_menu.setEnabled(true);
                    }
                });
                val.centrarInternalFrame(ED, Principal.desktop_menu);
            } else {
                val.mostrarMensaje("No se seleccionó ningún Dueño", "Error", "Error al seleccionar");
            }
        }
    }//GEN-LAST:event_EditarDuenioActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tabla);
        TablaVet.setRowSorter(sorter);

        List<RowFilter<Object, Object>> filters = new ArrayList<>();
        int[] columnasABuscar = {0, 1, 2};

        for (int columna : columnasABuscar)
        {
            filters.add(RowFilter.regexFilter("(?i)" + txtBusqueda.getText(), columna));
        }

        RowFilter<Object, Object> rowFilter = RowFilter.orFilter(filters);
        sorter.setRowFilter(rowFilter);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshacerActionPerformed
        TableRowSorter<DefaultTableModel> sorter = (TableRowSorter<DefaultTableModel>) TablaVet.getRowSorter();
        sorter.setRowFilter(null);
    }//GEN-LAST:event_btnDeshacerActionPerformed
    public void cargarTabla() 
    {
        tabla = new DefaultTableModel() 
        {
            @Override
            public boolean isCellEditable(int row, int column) 
            {
                return false;
            }
        };

        Conexion conect = new Conexion();
            String[] titulos = 
            {
        "<html><b><font face='Liberation Sans' size='4.5' color='#000000'>ID</font></b></html>",
        "<html><b><font face='Liberation Sans' size='4.5' color='#000000'>Nombre</font></b></html>",
        "<html><b><font face='Liberation Sans' size='4.5' color='#000000'>Apellido</font></b></html>",
        "<html><b><font face='Liberation Sans' size='4' color='#000000'>Sexo</font></b></html>",
        "<html><b><font face='Liberation Sans' size='4' color='#000000'>Edad</font></b></html>",
        "<html><b><font face='Liberation Sans' size='5' color='#000000'>Direccion</font></b></html>",
        "<html><b><font face='Liberation Sans' size='4.5' color='#000000'>Telefono</font></b></html>"
    };

        tabla.setColumnIdentifiers(titulos);

        List<Duenio> Listduenio = conect.traerDuenio();

        if (Listduenio != null) 
        {
            for (Duenio duenio : Listduenio) 
            {
                Object[] objeto = 
                {
                    duenio.getId_duenio(),
                    duenio.getNombre(),
                    duenio.getApellido(),
                    duenio.getSexo(),
                    duenio.getEdad(),
                    duenio.getDireccion(),
                    duenio.getTelefono()
                };
                tabla.addRow(objeto);
            }
        }

        TablaVet.setModel(tabla);
        TableColumnModel columnModel = TablaVet.getColumnModel();

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        TablaVet.setDefaultRenderer(Object.class, centerRenderer);
        TablaVet.getTableHeader().setReorderingAllowed(false);
        int anchoMinimo = 60;
        columnModel.getColumn(0).setMinWidth(anchoMinimo);
        columnModel.getColumn(0).setMaxWidth(anchoMinimo);
        columnModel.getColumn(0).setPreferredWidth(anchoMinimo);
        columnModel.getColumn(3).setMinWidth(50);
        columnModel.getColumn(3).setMaxWidth(50);
        columnModel.getColumn(3).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(125);
        columnModel.getColumn(1).setMinWidth(125);
        columnModel.getColumn(1).setMaxWidth(125);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(2).setMinWidth(125);
        columnModel.getColumn(2).setMaxWidth(125);
        columnModel.getColumn(4).setPreferredWidth(50);
        columnModel.getColumn(4).setMinWidth(50);
        columnModel.getColumn(4).setMaxWidth(50);
        columnModel.getColumn(5).setPreferredWidth(400);
        columnModel.getColumn(5).setMinWidth(400);
        columnModel.getColumn(5).setMaxWidth(400);
        columnModel.getColumn(6).setPreferredWidth(100);
        columnModel.getColumn(6).setMinWidth(110);
        columnModel.getColumn(6).setMaxWidth(110);
        for (int i = 0; i < columnModel.getColumnCount(); i++) 
        {
            columnModel.getColumn(i).setResizable(false);
        }
    }

  //5,9


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarMascota;
    private javax.swing.JButton EditarDuenio;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JTable TablaVet;
    private javax.swing.JButton bntAgregarDuenio;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDeshacer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
